1. RHEL (레드햇 리눅스)
레드햇의 공식 배포판으로 레드햇이 지원하는 서비스를 받을 수 있다.
비록 상용이지만 라이선스는 GNU GPL을 따르고 있어서 대부분의 소스를 공개하고 있다. 아래 이어서 설명할 CentOS가 이 소스에서 레드햇 상표를 지우고 다시 배포하는 버전이다.

2. CentOS
Community Enterprise Operating System의 약자로 "센트오에스"라고 발음한다.
페도라 리눅스는 레드햇 리눅스의 선도 버전이고, CentOS는 조금 느리다. 최신 RHEL 소스를 기반으로 만들어지기 때문이다.
그리고 이미 레드햇이 CentOS를 인수하기도 했다.

hostname 변경
# hostnamectl set-hostname nn01
# hostnamectl set-hostname dn01
# hostnamectl set-hostname dn02


/etc/hosts 수정
IP1   nn01
IP2    dn01
IP3    dn02

user 등록 및 ssh-key 생성 (3대 공통)
# useradd kdone
su - kdone
ssh-keygen
/home/kdata/.ssh/id_rsa, id_rsa.pub




/etc/ssh/sshd_config 수정(ssh 패스워드 접속방식 차단으로 key 배포 불가)
PasswordAuthentication no -> yes

#systemctl restart sshd


ssh-key 배포 (nn01 > nn01, dn01, dn02 | dn01 > nn01, dn01, dn02 | dn02 > nn01,dn01,dn02)
# ssh-copy-id -i /home/kdone/.ssh/id_rsa.pub kdone@nn01
# ssh-copy-id -i /home/kdone/.ssh/id_rsa.pub kdone@dn01
# ssh-copy-id -i /home/kdone/.ssh/id_rsa.pub kdone@dn02


/etc/ssh/sshd_config 원복
PasswordAuthentication yes -> no

#systemctl restart sshd


jdk  tar 파일 download
[kdone@nn01 ~]$
scp jdk-8u251-linux-x64.tar.gz kdone@dn01:/home/kdone
scp jdk-8u251-linux-x64.tar.gz kdone@dn02:/home/kdone


tar -xzvf jdk-8u251-linux-x64.tar.gz

jdk 설치
[root@nn01 ~]$
mkdir -p /opt/jdk/1.8.0_251
mv jdk1.8.0_251/* /opt/jdk/1.8.0_251/
ln -s /opt/jdk/1.8.0_251 /opt/jdk/current
alternatives --install /usr/bin/java java /opt/jdk/current/bin/java 2
alternatives --config java
alternatives --install /usr/bin/jar jar /opt/jdk/current/bin/jar 2
alternatives --install /usr/bin/javac javac /opt/jdk/current/bin/javac 2
alternatives --set jar /opt/jdk/current/bin/jar
alternatives --set javac /opt/jdk/current/bin/javac

[kdone@nn01 ~]$ 
**~/.bash_profie 수정
export JAVA_HOME=/opt/jdk/current
export PATH=$PATH:$JAVA_HOME/bin

**변경내용 적용
source ~/.bash_profile

**wget 명령어가 안먹힐 때 아래 명령어를 사용
dnf update && dnf install wget

Spark
wget http://mirror.navercorp.com/apache/spark/spark-2.4.7/spark-2.4.7-bin-hadoop2.7.tgz
tar -xzvf spark-2.4.7-bin-hadoop2.7.tgz
mkdir -p /opt/spark/2.4.7
mv spark-2.4.7-bin-hadoop2.7/* /opt/spark/2.4.7
ln -s /opt/spark/2.4.7 /opt/spark/current
chown -R kdone /opt/spark/

unlink /opt/spark/current

[kdone@nn01 ~]$
vi ~/.bash_profile
export SPARK_HOME=/opt/spark/current
export PATH=$PATH:$SPARK_HOME/bin

**변경내용 적용
source ~/.bash_profile

cd $SPARK_HOME/conf
cp spark-env.sh.template spark-env.sh

vi spark-env.sh
export JAVA_HOME=/opt/jdk/current
export SPARK_WORKER_CORES=6

cp slaves.template slaves

vi slaves
dn01
dn02
